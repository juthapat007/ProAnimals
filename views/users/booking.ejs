<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ | ‡πÑ‡∏ä‡∏¢‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏ï‡∏ß‡πÅ‡∏û‡∏ó‡∏¢‡πå</title>

<%- include('../partials/link') %>

  <!-- Flatpickr CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/airbnb.css">

</head>
<body>
<div class="container">
  <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß -->
<%- include('../partials/header') %>
  <!-- Progress Bar -->
  <div class="progress">
    <div class="progress-step">
      <div class="progress-circle">1</div>
      <span>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå</span>
    </div>
    <div class="progress-step active">
      <div class="progress-circle">2</div>
      <span>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£-‡∏ß‡∏±‡∏ô</span>
    </div>
    <div class="progress-step">
      <div class="progress-circle">3</div>
      <span>‡πÄ‡∏ß‡∏•‡∏≤</span>
    </div>
    <div class="progress-step">
      <div class="progress-circle">4</div>
      <span>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</span>
    </div>
    <div class="progress-step">
      <div class="progress-circle">5</div>
      <span>‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</span>
    </div>
  </div>

  <!-- ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å -->
  <% if (locals.pet && locals.pet_id) { %>
    <div class="pet-card">
      <h4><i class="fas fa-paw"></i> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</h4>
      <div class="pet-details">
        <strong><%= pet.pet_name %></strong> ‚Ä¢
        <span><i class="fas fa-venus-mars"></i> <%= pet.pet_gender %></span> ‚Ä¢
        <span><i class="fas fa-tag"></i> <%= pet.pet_type_name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %></span>
      </div>
    </div>
  <% } else { %>
    <div class="error-message">
      <i class="fas fa-exclamation-triangle"></i> 
      ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô
      <br><br>
      <a href="/users/select_pet" class="btn-primary" style="display: inline-block; padding: 0.5rem 1rem; text-decoration: none;">
        <i class="fas fa-arrow-left"></i> ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á
      </a>
    </div>
  <% } %>

<strong>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ <span style="color: red;">*</span></strong><br>
  <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ -->
  <form id="bookingForm" method="GET" action="/users/select_time">
    <input type="hidden" name="pet_id" value="<%= pet_id %>">
    <input type="hidden" name="cus_id" value="<%= cus_id %>">
    <input type="hidden" id="selectedDateTime" name="datetime" value="">
    <input type="hidden" id="selectedVetId" name="vet_id" value="">
    
    <% if (services.length > 0) { %>
      <% services.forEach(service => { %>
        <div class="service-card">
            <label for="service_<%= service.service_id %>">
              <div style="display: flex;">
              <input type="radio" id="service_<%= service.service_id %>" name="service_id" value="<%= service.service_id %>" required>
              <div class="service-title"><%= service.service_type %>  <div class="service-price"><%= service.service_price.toLocaleString() %> ‡∏ö‡∏≤‡∏ó</div></div>
              </div>
            </label>
        </div>
        <div style="padding-bottom: 5px;"></div>
      <% }) %>
    <% } else { %>
      <p style="text-align: center; color: #666;">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</p>
    <% } %>

    <div style="text-align: left; display: flex;">
      <strong>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</strong><div style="color: red;">*</div>
    </div>
  
    <!-- ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ -->
    <div id="loadingMessage" class="loading-message">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£...</div>
    <div id="errorMessage" class="error-message" style="display: none;"></div>
  
    <div class="date-input-wrapper">
      <input type="text" id="bookingDate" name="date" placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà..." required >
      <i class="fa-solid fa-calendar-days calendar-icon"></i>
    </div>

    <!-- ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ -->
    <!-- <div id="timeSelection" class="time-selection">
      <div style="text-align: left; display: flex; margin-top: 15px;">
        <strong>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤</strong><div style="color: red;">*</div>
      </div>
      <div id="timeLoading" class="time-loading" style="display: none;">
        ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£...
      </div>
      <div id="timeError" class="error-message" style="display: none; margin-top: 10px;"></div>
      <div id="timeSlotsContainer" class="time-slots-container"></div>
    </div> -->

    <br>
    <button type="submit" class="btn-primary" style="width: 100%; height: 60px;">
      ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ <i class="fas fa-arrow-right"></i> 
    </button><br><br>
    <button type="button" class="btn-cancel" style="width: 100%; height: 60px;" onclick="window.history.back()">
      <i class="fas fa-arrow-left"></i>  ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
    </button><br>
      
  </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/th.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
  
  let flatpickrInstance = null;
  let availableTimesData = [];
  
  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å vet_work table
  async function loadAvailableDates() {
    const loadingMessage = document.getElementById('loadingMessage');
    const errorMessage = document.getElementById('errorMessage');
    const dateInput = document.getElementById('bookingDate');
    
    try {
      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏´‡∏•‡∏î
      loadingMessage.style.display = 'block';
      errorMessage.style.display = 'none';
      
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å API
      const response = await fetch('/users/api/available-dates');
      const data = await response.json();
      
      console.log('üîç API Response:', data); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° debug
      
      if (!data.success) {
        throw new Error(data.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
      }
      
      const availableDates = data.availableDates;
      
      console.log('üìÖ Available dates from API:', availableDates); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° debug
      console.log('üìä Total available dates:', availableDates.length); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° debug
      
      // ‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏´‡∏•‡∏î
      loadingMessage.style.display = 'none';
      
      if (availableDates.length === 0) {
        errorMessage.textContent = '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ';
        errorMessage.style.display = 'block';
        return;
      }
      
      // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô input ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á Flatpickr
      dateInput.disabled = false;
      dateInput.placeholder = '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà...';
      
      flatpickrInstance = flatpickr("#bookingDate", {
        locale: "th",
        dateFormat: "Y-m-d",
        disableMobile: true,
        altInput: true,
        altFormat: "d/m/Y",
        allowInput: false,
        enable: availableDates, // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        defaultDate: new Date(),

        onReady: function(selectedDates, dateStr, instance) {
          console.log('üóìÔ∏è Flatpickr initialized with dates:', availableDates);
          if (availableDates.length === 0) {
            instance.input.placeholder = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£';
          }
        },

        onChange: function(selectedDates, dateStr, instance) {
          console.log('üìÖ Date selected:', dateStr);
          if (dateStr && availableDates.includes(dateStr)) {
            loadAvailableTimes(dateStr);
          } else {
            hideTimeSelection();
          }
        },

        onValueUpdate: function(selectedDates, dateStr, instance) {
          if (selectedDates.length === 0 && dateStr && !availableDates.includes(dateStr)) {
            alert('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô');
          }
        }
      });
      
      console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', availableDates);
      
    } catch (error) {
      console.error('‚ùå Error loading available dates:', error);
      loadingMessage.style.display = 'none';
      errorMessage.textContent = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
      errorMessage.style.display = 'block';
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  async function loadAvailableTimes(selectedDate) {
    const timeSelection = document.getElementById('timeSelection');
    const timeLoading = document.getElementById('timeLoading');
    const timeError = document.getElementById('timeError');
    const timeSlotsContainer = document.getElementById('timeSlotsContainer');
    
    try {
      // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
      timeSelection.style.display = 'block';
      timeLoading.style.display = 'block';
      timeError.style.display = 'none';
      timeSlotsContainer.innerHTML = '';
      
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≤‡∏Å API
      const response = await fetch(`/users/api/available-times/${selectedDate}`);
      const data = await response.json();
      
      timeLoading.style.display = 'none';
      
      if (!data.success) {
        throw new Error(data.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ');
      }
      
      availableTimesData = data.availableTimes;
      
      if (availableTimesData.length === 0) {
        timeError.textContent = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ';
        timeError.style.display = 'block';
        return;
      }
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á time slots
      renderTimeSlots();
      
      console.log(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${selectedDate} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, availableTimesData.length, 'slots');
      
    } catch (error) {
      console.error('‚ùå Error loading available times:', error);
      timeLoading.style.display = 'none';
      timeError.textContent = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
      timeError.style.display = 'block';
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á time slots
  function renderTimeSlots() {
    const container = document.getElementById('timeSlotsContainer');
    container.innerHTML = '';
    
    availableTimesData.forEach((timeSlot, index) => {
      const slotElement = document.createElement('div');
      slotElement.className = 'time-slot';
      slotElement.dataset.datetime = timeSlot.datetime;
      slotElement.dataset.vetId = timeSlot.vet_id;
      
      slotElement.innerHTML = `
        <div class="time-display">${timeSlot.display_time}</div>
        <div class="vet-info">‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏≠ ${timeSlot.vet_name}</div>
      `;
      
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener
      slotElement.addEventListener('click', function() {
        // ‡∏•‡∏ö selection ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å slot ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        document.querySelectorAll('.time-slot.selected').forEach(slot => {
          slot.classList.remove('selected');
        });
        
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å slot ‡∏ô‡∏µ‡πâ
        this.classList.add('selected');
        
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô hidden fields
        document.getElementById('selectedDateTime').value = this.dataset.datetime;
        document.getElementById('selectedVetId').value = this.dataset.vetId;
        
        console.log('‚úÖ Selected time:', {
          datetime: this.dataset.datetime,
          vet_id: this.dataset.vetId
        });
      });
      
      container.appendChild(slotElement);
    });
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
  // function hideTimeSelection() {
  //   const timeSelection = document.getElementById('timeSelection');
  //   timeSelection.style.display = 'none';
    
  //   // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  //   document.getElementById('selectedDateTime').value = '';
  //   document.getElementById('selectedVetId').value = '';
  //   availableTimesData = [];
  // }
  
  // ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  loadAvailableDates();

  // ‚úÖ Validate form - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡πâ‡∏ß‡∏¢
  document.getElementById("bookingForm").addEventListener("submit", function (e) {
    const selectedService = document.querySelector('input[name="service_id"]:checked');
    const selectedDate = document.getElementById("bookingDate").value;
    const selectedDateTime = document.getElementById("selectedDateTime").value;
    const selectedVetId = document.getElementById("selectedVetId").value;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
    if (!selectedService) {
      e.preventDefault();
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£");
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    if (!selectedDate) {
      e.preventDefault();
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà");
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
    // if (!selectedDateTime || !selectedVetId) {
    //   e.preventDefault();
    //   alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
    //   return;
    // }

    console.log('‚úÖ Form validation passed:', {
      service_id: selectedService.value,
      date: selectedDate,
      datetime: selectedDateTime,
      vet_id: selectedVetId
    });
  });
});
</script>

</body>
</html>