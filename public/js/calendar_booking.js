document.addEventListener('DOMContentLoaded', function () {
  let flatpickrInstance = null;
  let availableTimesData = [];
  let selectedService = null;

  async function loadAvailableDates() {
    const loadingMessage = document.getElementById('loadingMessage');
    const errorMessage = document.getElementById('errorMessage');
    const dateInput = document.getElementById('SelectDate') || document.getElementById('bookingDate');

    try {
      loadingMessage.style.display = 'block';
      errorMessage.style.display = 'none';

      const response = await fetch('/users/api/available-dates');
      const data = await response.json();

      if (!data.success) throw new Error(data.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');

      const availableDates = data.availableDates;
      loadingMessage.style.display = 'none';

      if (availableDates.length === 0) {
        errorMessage.textContent = '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ';
        errorMessage.style.display = 'block';
        return;
      }

      dateInput.disabled = false;
      dateInput.placeholder = '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà...';

      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö booking.ejs (user side)
      if (document.getElementById('SelectDate')) {
        flatpickrInstance = flatpickr("#SelectDate", {
          locale: "th",
          dateFormat: "Y-m-d",
          disableMobile: true,
          altInput: true,
          altFormat: "d/m/Y",
          allowInput: false,
          enable: availableDates,
          defaultDate: new Date(),
          onChange: (selectedDates, dateStr) => {
            if (dateStr && availableDates.includes(dateStr)) {
              checkAndLoadTimes(dateStr);
            }
          }
        });
      }
      
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö pet_service.ejs (admin side)  
      if (document.getElementById('bookingDate')) {
        flatpickrInstance = flatpickr("#bookingDate", {
          locale: "th", 
          dateFormat: "Y-m-d",
          disableMobile: true,
          altInput: true,
          altFormat: "d/m/Y",
          allowInput: false,
          enable: availableDates,
          defaultDate: new Date(),
          onChange: (selectedDates, dateStr) => {
            if (dateStr && availableDates.includes(dateStr)) {
              checkAndLoadTimes(dateStr);
            }
          }
        });
      }

    } catch (error) {
      console.error('‚ùå Error loading available dates:', error);
      loadingMessage.style.display = 'none';
      errorMessage.textContent = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
      errorMessage.style.display = 'block';
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î time slots
  function checkAndLoadTimes(selectedDate) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    const serviceRadios = document.querySelectorAll('input[name="service_id"]');
    let selectedServiceId = null;
    
    serviceRadios.forEach(radio => {
      if (radio.checked) {
        selectedServiceId = radio.value;
      }
    });

    if (selectedServiceId && selectedDate) {
      loadAvailableTimes(selectedDate, selectedServiceId);
    } else if (!selectedServiceId) {
      console.log('‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô');
      // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á alert ‡∏´‡∏£‡∏∑‡∏≠ message ‡πÉ‡∏´‡πâ user ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î available times ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á service_id
  async function loadAvailableTimes(selectedDate, serviceId = null) {
    try {
      let apiUrl;
      
      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API URL ‡∏ï‡∏≤‡∏° context
      if (window.location.pathname.includes('/admin/')) {
        // Admin side - ‡πÉ‡∏ä‡πâ API ‡∏Ç‡∏≠‡∏á admin ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö service_id
        apiUrl = serviceId 
          ? `/admin/pet_service/api/available-times?date=${selectedDate}&service_id=${serviceId}`
          : `/admin/pet_service/api/available-times?date=${selectedDate}&service_id=1`; // fallback
      } else {
        // User side
        apiUrl = `/users/api/available-times/${selectedDate}`;
      }

      console.log('üîÑ Loading times from:', apiUrl);
      
      const response = await fetch(apiUrl);
      const data = await response.json();

      if (!data.success) throw new Error(data.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ');

      availableTimesData = data.availableTimes || data.availableSlots || [];

      if (availableTimesData.length === 0) {
        console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ');
        return;
      }

      console.log('‚úÖ Loaded time slots:', availableTimesData);

    } catch (error) {
      console.error('‚ùå Error loading available times:', error);
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÅ‡∏™‡∏î‡∏á time slots
  async function openTimeModal(date) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    const serviceRadios = document.querySelectorAll('input[name="service_id"]');
    let selectedServiceId = null;
    
    serviceRadios.forEach(radio => {
      if (radio.checked) {
        selectedServiceId = radio.value;
      }
    });

    if (!selectedServiceId) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }

    try {
      let apiUrl;
      
      if (window.location.pathname.includes('/admin/')) {
        apiUrl = `/admin/pet_service/api/available-times?date=${date}&service_id=${selectedServiceId}`;
      } else {
        apiUrl = `/users/api/available-times/${date}`;
      }

      console.log('üîÑ Loading times for modal from:', apiUrl);
      
      const response = await fetch(apiUrl);
      const data = await response.json();

      const container = document.getElementById('timeSlotsContainer');

      if (data.success && (data.availableTimes?.length > 0 || data.availableSlots?.length > 0)) {
        const timeSlots = data.availableTimes || data.availableSlots || [];
        
        timeSlots.forEach(timeSlot => {
          const btn = document.createElement("button");
          btn.className = "btn btn-add";
          
          // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á format ‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡∏°‡πà
          if (typeof timeSlot === 'string') {
            btn.textContent = timeSlot;
            btn.onclick = () => selectTime(timeSlot);
          } else {
            btn.textContent = `${timeSlot.time || timeSlot.display_time} `;
            btn.onclick = () => selectTime(timeSlot.time || timeSlot.display_time, timeSlot.vet_id);
          }
          
          container.appendChild(btn);
        });
      } else {
        container.innerHTML = "<p class='text-gray-500 col-span-2 text-center py-4'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</p>";
      }

      document.getElementById("timeModal").classList.remove("hidden");
      
    } catch (error) {
      console.error('‚ùå Error in openTimeModal:', error);
      const container = document.getElementById('timeSlotsContainer');
      container.innerHTML = "<p class='text-red-500 col-span-2 text-center py-4'>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤</p>";
      document.getElementById("timeModal").classList.remove("hidden");
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î modal
  function closeTimeModal() {
    document.getElementById("timeModal").classList.add("hidden");
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
  function selectTime(time, vetId = null) {
    document.getElementById("selectedTime").value = time;
    document.getElementById('selectedTimeText').textContent = time;
    document.getElementById('selectedTimeDisplay').classList.remove('hidden');


    if (vetId && document.getElementById("selectedVetId")) {
      document.getElementById("selectedVetId").value = vetId;
    }
    
    // console.log('‚úÖ Selected time:', time, 'Vet ID:', vetId);
    closeTimeModal();
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏° submit ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const submitBtn = document.getElementById('submitBtn');
    if (submitBtn) {
      submitBtn.disabled = false;
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
  function updateService() {
    const serviceRadios = document.querySelectorAll('input[name="service_id"]');
    let selectedServiceId = null;
    
    serviceRadios.forEach(radio => {
      if (radio.checked) {
        selectedServiceId = radio.value;
      }
    });

    selectedService = selectedServiceId;
    console.log('üîÑ Service selected:', selectedServiceId);
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î time slots ‡πÉ‡∏´‡∏°‡πà
    const dateInput = document.getElementById('SelectDate') || document.getElementById('bookingDate');
    if (dateInput && dateInput.value && selectedServiceId) {
      checkAndLoadTimes(dateInput.value);
    }
  }

  // ‚úÖ Event listeners
  document.addEventListener('change', function(e) {
    if (e.target.name === 'service_id') {
      updateService();
    }
  });

  // ‚úÖ Global functions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô HTML
  window.openTimeModal = openTimeModal;
  window.closeTimeModal = closeTimeModal;
  window.selectTime = selectTime;
  window.updateService = updateService;

  // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  loadAvailableDates();
});

document.addEventListener('DOMContentLoaded', () => {
  flatpickr("#bookingDate", {
    locale: "th",
    minDate: "today",
    dateFormat: "Y-m-d",
    onChange: loadAvailableTimes
  });
  loadAvailableDates();
});

async function loadAvailableDates() {
  const res = await fetch('/admin/pet_service/api/available-dates');
  const data = await res.json();
  if (data.success) {
    console.log('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:', data.availableDates);
  }
}

async function loadAvailableTimes(selectedDates, serviceId) {
  if (!selectedDates || !serviceId) return;
  const date = selectedDates[0];
  const res = await fetch(`/admin/pet_service/api/vet-available-times?date=${date}&service_id=${serviceId}`);
  const data = await res.json();
  if (data.success) {
    console.log('‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏á:', data.availableSlots);
  }
}




// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô calendar_booking.js

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡πÄ‡∏ß‡∏•‡∏≤
function checkSelectionStatus() {
  const serviceSelected = document.querySelector('input[name="service_id"]:checked');
  const dateSelected = (document.getElementById('SelectDate') || document.getElementById('bookingDate'))?.value;
  
  const timeSection = document.getElementById('timeSelectionSection');
  const instructionMsg = document.getElementById('instructionMessage');
  
  if (serviceSelected && dateSelected) {
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß - ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡πÄ‡∏ß‡∏•‡∏≤
    if (timeSection) {
      timeSection.classList.remove('hidden');
    }
    if (instructionMsg) {
      instructionMsg.textContent = '‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å';
      instructionMsg.className = 'text-sm text-green-600 my-2';
    }
  } else {
    // ‡∏¢‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö - ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°
    if (timeSection) {
      timeSection.classList.add('hidden');
    }
    if (instructionMsg) {
      let missingItems = [];
      if (!serviceSelected) missingItems.push('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£');
      if (!dateSelected) missingItems.push('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà');
      
      instructionMsg.textContent = `üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${missingItems.join(' ‡πÅ‡∏•‡∏∞ ')}`;
      instructionMsg.className = 'text-sm text-blue-600 my-2';
    }
  }
}




// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°)
async function showAvailableTimes() {
  const btn = document.getElementById("showTimeBtn");
  btn.classList.remove('bg-primary');   // ‡∏•‡∏ö‡∏™‡∏µ‡πÄ‡∏Å‡πà‡∏≤
  btn.classList.add('bg-green-600');    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏µ‡πÉ‡∏´‡∏°‡πà
  btn.textContent = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...";     // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß

  const serviceSelected = document.querySelector('input[name="service_id"]:checked');
  const dateInput = document.getElementById('SelectDate') || document.getElementById('bookingDate');
  
  if (!serviceSelected || !dateInput?.value) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô');
    return;
  }

  // ‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤
  await openTimeModal(dateInput.value);

  btn.textContent = "‡∏î‡∏π‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á";
  btn.classList.remove('bg-red');
  btn.classList.add('bg-accept');
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß
function updateSelectedTimeDisplay(timeStr, vetName = '') {
  const display = document.getElementById('selectedTimeDisplay');
  const textElement = document.getElementById('selectedTimeText');
  
  if (display && textElement) {
    display.classList.remove('hidden');
    textElement.textContent = vetName ? `${timeStr} ` : timeStr;
  }
  
  // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
  const submitBtn = document.querySelector('button[type="submit"]');
  if (submitBtn) {
    submitBtn.disabled = false;
    submitBtn.classList.remove('opacity-50');
  }
}


function selectTimeUpdated(time, vetId = null, vetName = '') {
  // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
  const serviceRadios = document.querySelectorAll('input[name="service_id"]');
  let selectedServiceId = null;
  serviceRadios.forEach(radio => {
    if (radio.checked) selectedServiceId = radio.value;
  });

  const petId = document.querySelector('input[name="pet_id"]').value;
  const cusId = document.querySelector('input[name="cus_id"]').value;
  const dateInput = document.getElementById('bookingDate');
  const date = dateInput ? dateInput.value : '';

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏û‡∏£‡πâ‡∏≠‡∏° parameters
  const params = new URLSearchParams({
    pet_id: petId,
    cus_id: cusId,
    service_id: selectedServiceId,
    date: date,
    time: time,
    vet_id: vetId || ''
  });

  // Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ confirm_AM ‡∏û‡∏£‡πâ‡∏≠‡∏° parameters
  window.location.href = `/admin/confirm_AM?${params.toString()}`;
}


// ‚úÖ Event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
document.addEventListener('DOMContentLoaded', function() {
  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
  document.addEventListener('change', function(e) {
    if (e.target.name === 'service_id') {
      updateService();
      checkSelectionStatus();
    }
  });
  
  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  const dateInput = document.getElementById('SelectDate') || document.getElementById('bookingDate');
  if (dateInput) {
    dateInput.addEventListener('change', function() {
      checkSelectionStatus();
    });
  }
  
  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  setTimeout(checkSelectionStatus, 100);
});

// ‚úÖ Global functions
window.checkSelectionStatus = checkSelectionStatus;
window.showAvailableTimes = showAvailableTimes;
window.updateSelectedTimeDisplay = updateSelectedTimeDisplay;
window.selectTimeUpdated = selectTimeUpdated;