import express from "express";
import { getPoolPromise } from "../../config/db.js";
import { requireLogin } from "../../middleware/auth.js";

const router = express.Router();

// üìå ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ + ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
router.get("/", requireLogin, async (req, res) => {
  try {
    if (req.session.access_type !== "veterinarian") {
      return res.redirect("/");
    }
    const pool = getPoolPromise(req.session.user_email);
    const [medications] = await pool.query("SELECT * FROM medication ORDER BY medication_id");

    res.render("veterinarian/manage_Medication", {
      vetId: req.session.vet_id,
      vetName: req.session.user_name,
      medications,
    });
  } catch (err) {
    console.error("‚ùå Medication error:", err);
    res.status(500).send("Database Error: " + err.message);
  }
});

// üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≤
// üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≤
router.post("/add", requireLogin, async (req, res) => {
  try {
    const { medicine_name, stock_quantity, medicine_package, medicine_price } = req.body;

    const pool = getPoolPromise(req.session.user_email);

    // üîπ ‡∏´‡∏≤ id ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    const [last] = await pool.query("SELECT medication_id FROM medication ORDER BY medication_id DESC LIMIT 1");

    let newId = "M001"; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏¢
    if (last.length > 0) {
      const lastId = last[0].medication_id; // ‡πÄ‡∏ä‡πà‡∏ô M005
      const num = parseInt(lastId.replace("M", "")) + 1; // 5+1 = 6
      newId = "M" + num.toString().padStart(3, "0"); // ‡πÑ‡∏î‡πâ M006
    }

    // üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    await pool.query(
      `INSERT INTO medication (medication_id, medicine_name, stock_quantity, medicine_package, medicine_price)
       VALUES (?, ?, ?, ?, ?)`,
      [newId, medicine_name, stock_quantity, medicine_package, medicine_price]
    );

    res.redirect("/veterinarian/manage_medication");
  } catch (err) {
    console.error("‚ùå Add medication error:", err);
    res.status(500).send("Database Error: " + err.message);
  }
});

// üìå POST: ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤
router.post("/update", requireLogin, async (req, res) => {
  try {
    const { medication_id, medicine_name, stock_quantity, medicine_package, medicine_price } = req.body;
    const pool = getPoolPromise(req.session.user_email);

    await pool.query(
      `UPDATE medication 
       SET medicine_name=?, stock_quantity=?, medicine_package=?, medicine_price=? 
       WHERE medication_id=?`,
      [medicine_name, stock_quantity, medicine_package, medicine_price, medication_id]
    );

    res.redirect("/veterinarian/manage_medication");
  } catch (err) {
    console.error("‚ùå update medication error:", err);
    res.status(500).send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤: " + err.message);
  }
});



// üìå ‡∏•‡∏ö‡∏¢‡∏≤
router.post("/delete", requireLogin, async (req, res) => {
  try {
    const { medication_id } = req.body;

    const pool = getPoolPromise(req.session.user_email);
    await pool.query("DELETE FROM medication WHERE medication_id=?", [medication_id]);

    res.redirect("/veterinarian/manage_medication");
  } catch (err) {
    console.error("‚ùå Delete medication error:", err);
    res.status(500).send("Database Error: " + err.message);
  }
});

export default router;
